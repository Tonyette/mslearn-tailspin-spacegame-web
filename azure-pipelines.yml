# ASP.NET Core
# Build and test ASP.NET Core projects targeting .NET Core.
# Add steps that run tests, create a NuGet package, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- '*'

pool:
  vmImage: ubuntu-latest
  demands:
  - npm

variables:
  buildConfiguration: 'Release'
  sdkDotnetVersion: '5.x'
  rootDir: 'TailSpin.SpaceGame.Web/wwwroot'
  projectLocation: '**/*.csproj'

steps:
- task: UseDotNet@2
  inputs:
    packageType: sdk
    version: '$(sdkDotnetVersion)'

- task: Npm@1
  displayName: 'Install npm'
  inputs:
   verbose: false

- script: './node_modules/.bin/node-sass $(rootdir) --output $(rootdir)'
  displayName: 'Compile Sass assets'

- task: gulp@1
  displayName: 'Run gulp tasks'

- script: 'echo "$(Build.BuildId), $(Build.DefinitionName), $(Build.BuildNumber)" > buildinfo.txt'
  displayName: 'write build info'
  workingDirectory: '$(rootdir)'

- task: DotNetCoreCLI@2
  displayName: 'Restore project dependencies'
  inputs:
    command: 'restore'
    projects: '$(projectLocation)'
  
- task: DotNetCoreCLI@2
  displayName: 'build project dependencies'
  inputs:
    command: 'build'
    arguments: '--no-restore --configuration Release'
    projects: '$(projectLocation)'

- task: DotNetCoreCLI@2
  displayName: 'publish artifacts'
  inputs:
    command: 'publish'
    projects: '$(projectLocation)'
    publishWebProjects: false
    arguments: --no-build --configuration Release --output $(Build.ArtifactStagingDirectory)/Release
    zipAfterPublish: True

- template: templates/build.yml
  parameters:
    buildConfiguration: 'Debug'
    projectPath: '**/*.csproj'

- template: templates/build.yml
  parameters:
    buildConfiguration: 'Release'
    projectPath: '**/*.csproj'

- task: PublishBuildArtifacts@1
  displayName: 'publish artifact'
  condition: Succeeded()
  inputs:
    ArtifactName: 'build'
